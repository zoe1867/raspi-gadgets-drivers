#!/usr/bin/env python3
# -*- coding: utf-8-*-
# author: Tiger
# 8x8 LED module pin connection
# VCC---(1)(2)
# CLK---(3)(4)
# CS ---(5)(6)
# DIN---(7)(8)
# GND---(9)(10)

import RPi.GPIO as GPIO  
import time  
  
displib =[
[0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C],#0
[0x08,0x18,0x28,0x08,0x08,0x08,0x08,0x08],#1
[0x7E,0x2,0x2,0x7E,0x40,0x40,0x40,0x7E],#2
[0x3E,0x2,0x2,0x3E,0x2,0x2,0x3E,0x0],#3
[0x8,0x18,0x28,0x48,0xFE,0x8,0x8,0x8],#4
[0x3C,0x20,0x20,0x3C,0x4,0x4,0x3C,0x0],#5
[0x3C,0x20,0x20,0x3C,0x24,0x24,0x3C,0x0],#6
[0x3E,0x22,0x4,0x8,0x8,0x8,0x8,0x8],#7
[0x0,0x3E,0x22,0x22,0x3E,0x22,0x22,0x3E],#8
[0x3E,0x22,0x22,0x3E,0x2,0x2,0x2,0x3E],#9
[0x8,0x14,0x22,0x3E,0x22,0x22,0x22,0x22],#A
[0x3C,0x22,0x22,0x3E,0x22,0x22,0x3C,0x0],#B
[0x3C,0x40,0x40,0x40,0x40,0x40,0x3C,0x0],#C
[0x7C,0x42,0x42,0x42,0x42,0x42,0x7C,0x0],#D
[0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x7C],#E
[0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x40],#F
[0x3C,0x40,0x40,0x40,0x40,0x44,0x44,0x3C],#G
[0x44,0x44,0x44,0x7C,0x44,0x44,0x44,0x44],#H
[0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C],#I
[0x3C,0x8,0x8,0x8,0x8,0x8,0x48,0x30],#J
[0x0,0x24,0x28,0x30,0x20,0x30,0x28,0x24],#K
[0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7C],#L
[0x81,0xC3,0xA5,0x99,0x81,0x81,0x81,0x81],#M
[0x0,0x42,0x62,0x52,0x4A,0x46,0x42,0x0],#N
[0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C],#O
[0x3C,0x22,0x22,0x22,0x3C,0x20,0x20,0x20],#P
[0x1C,0x22,0x22,0x22,0x22,0x26,0x22,0x1D],#Q
[0x3C,0x22,0x22,0x22,0x3C,0x24,0x22,0x21],#R
[0x0,0x1E,0x20,0x20,0x3E,0x2,0x2,0x3C],#S
[0x0,0x3E,0x8,0x8,0x8,0x8,0x8,0x8],#T
[0x42,0x42,0x42,0x42,0x42,0x42,0x22,0x1C],#U
[0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18],#V
[0x0,0x49,0x49,0x49,0x49,0x2A,0x1C,0x0],#W
[0x0,0x41,0x22,0x14,0x8,0x14,0x22,0x41],#X
[0x41,0x22,0x14,0x8,0x8,0x8,0x8,0x8],#Y
[0x0,0x7F,0x2,0x4,0x8,0x10,0x20,0x7F],#Z
]

displine = [
[0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01],
[0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02],
[0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04],
[0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08],
[0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10],
[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20],
[0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40],
[0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80],
]

dispmove2pointO = [
[0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00],
[0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00],
[0x00,0x04,0x00,0x00,0x00,0x00,0x04,0x00],
[0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x08],
[0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10],
[0x00,0x20,0x00,0x00,0x00,0x00,0x20,0x00],
[0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00],
[0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x00],
]

dispmove2lineO1 = [
[0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00],
[0x00,0x00,0x02,0x01,0x01,0x02,0x00,0x00],
[0x00,0x04,0x02,0x01,0x01,0x02,0x04,0x00],
[0x08,0x04,0x02,0x01,0x01,0x02,0x04,0x08],
[0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10],
[0x10,0x20,0x00,0x00,0x00,0x00,0x20,0x10],
[0x10,0x20,0x40,0x00,0x00,0x40,0x20,0x10],
[0x10,0x20,0x40,0x80,0x80,0x40,0x20,0x10],
]

dispmove2lineO2 = [
[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
[0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00],
[0x00,0x00,0x02,0x01,0x01,0x02,0x00,0x00],
[0x00,0x04,0x02,0x01,0x01,0x02,0x04,0x00],
[0x08,0x04,0x02,0x01,0x01,0x02,0x04,0x08],
[0x18,0x04,0x02,0x01,0x01,0x02,0x04,0x18],
[0x18,0x24,0x02,0x01,0x01,0x02,0x24,0x18],
[0x18,0x24,0x42,0x01,0x01,0x42,0x24,0x18],
[0x18,0x24,0x42,0x81,0x81,0x42,0x24,0x18],
]

class LED:

    def __init__(self):
        self.Max7219_CLK = 2   
        self.Max7219_CS = 3  
        self.Max7219_DIN = 4  

    def write_byte(self, dat):
        GPIO.output(self.Max7219_CS, GPIO.LOW)
        count = 0
        while (count<8):
            GPIO.output(self.Max7219_CLK, GPIO.LOW)
            tmp = dat&0x80
            if tmp == 0x80:
                GPIO.output(self.Max7219_DIN, GPIO.HIGH)
            else:
                GPIO.output(self.Max7219_DIN, GPIO.LOW)
            GPIO.output(self.Max7219_CLK, GPIO.HIGH)
            dat = dat<<1   
            count = count + 1    

    def write_data(self, addr, wdat):
        GPIO.output(self.Max7219_CS, GPIO.LOW)
        self.write_byte(addr)
        self.write_byte(wdat)
        GPIO.output(self.Max7219_CS, GPIO.HIGH)     

    def init(self):

        GPIO.setmode(GPIO.BCM)  
        time.sleep(1)  
        GPIO.setup(self.Max7219_CLK, GPIO.OUT)  
        GPIO.setup(self.Max7219_CS, GPIO.OUT) 
        GPIO.setup(self.Max7219_DIN, GPIO.OUT) 

        self.write_data(0x09,0x00)
        self.write_data(0x0a,0x03)
        self.write_data(0x0b,0x07)
        self.write_data(0x0c,0x01)
        self.write_data(0x0f,0x00)

    def display_char(self, chr):
        for i in range(8):
            tmp = 0
            if chr >='0' and chr <='9':
                tmp = ord(chr) - ord('0')
            elif chr >='a' and chr <='z':
                tmp = ord(chr) - ord('a') + 10
            elif chr >='A' and chr <='Z':
                tmp = ord(chr) - ord('A') + 10
            else:
                tmp = 0
            self.write_data(i+1, displib[tmp][i])

    def display_runline(self):
        for j in range(8):
            for i in range(8):
                self.write_data(i+1,displine[j][i])
            time.sleep(0.04)
        for j in range(8):
            for i in range(8):
                self.write_data(i+1,displine[7-j][i])
            time.sleep(0.04)    

    def display_run2pointo(self):
        for j in range(8):
            for i in range(8):
                self.write_data(i+1,dispmove2pointO[j][i])
            time.sleep(0.04)
        for j in range(8):
            for i in range(8):
                self.write_data(i+1,dispmove2pointO[7-j][i])
            time.sleep(0.04)   

    def display_run2lineo(self):
        for j in range(9):
            for i in range(8):
                self.write_data(i+1,dispmove2lineO2[j][i])
            time.sleep(0.04)
        for j in range(9):
            for i in range(8):
                self.write_data(i+1,dispmove2lineO2[8-j][i])
            time.sleep(0.04)                             

    def close(self):
        GPIO.cleanup()

if __name__ == "__main__":

    try:   
        Led = LED()
        Led.init()
        time.sleep(0.01)
        
        ########################################################
        #display 0~Z
        ########################################################     
        while True:
            for j in range(36):
                for i in range(8):
                    Led.write_data(i+1, displib[j][i])
                time.sleep(0.5)

        ########################################################
        #display 1,2,3 & a B c
        ########################################################        
        '''
        tmp1 = ['1','2','3']
        for ch in tmp1:
            Led.display_char(ch)
            time.sleep(1)
        tmp2 = ['a','B','c']
        for chr in tmp2:
            Led.display_char(chr)
            time.sleep(1)
        '''

        ########################################################
        #display run 2 lines animation
        ########################################################     
        ''' 
        while True:
            Led.display_run2lineo()
        '''
    finally:        
        Led.close()  
        
